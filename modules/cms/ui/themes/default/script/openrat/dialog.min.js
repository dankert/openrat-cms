import $ from "../jquery-global.min.js";
import View from './view.min.js';
import Notice from "./notice.min.js";
import Workbench from "./workbench.min.js";
import WorkbenchNavigator from "./navigator.min.js";




export default class Dialog {





constructor() {

this.view;





this.element = $('.or-dialog-content .or-view');
}





set isDirty( dirty ) {
if   ( dirty )
this.element.addClass('view--is-dirty');
else
this.element.removeClass('view--is-dirty');
}





get isDirty() {
return this.element.hasClass('view--is-dirty');
}












start( name,action,method,id,params )
{

if (!action)
action =  Workbench.state.action;

if  (!id)
id =  Workbench.state.id;

let dialog = this;

let view = new View( action,method,id,params );

Notice.removeAllNotices();

$('.or-dialog-content .or-view').html(''); 

$('.or-dialog-content .or-act-dialog-name').html( name );
this.show();

view.onCloseHandler.add( function() {
dialog.back();
} );

view.onChangeHandler.add( function() {

console.debug("Changes detected");
dialog.isDirty = true;
});

view.onSaveHandler.add( function() {

dialog.isDirty = false;
});

this.view = view;

Workbench.getInstance().startSpinner();

let viewPromise = this.view.start( this.element );

viewPromise.then(
() => Workbench.getInstance().stopSpinner()
);

return viewPromise;
}



show() {


WorkbenchNavigator.navigateToNew( Workbench.state );

$('.or-dialog').removeClass('dialog--is-closed').addClass('dialog--is-open');

if   ( this.isDirty ) {
this.element.addClass('view--is-dirty');
}
}

back() {
console.debug("Back from dialog");
history.back();
}

hide() {
$('.or-dialog').removeClass('dialog--is-open').addClass('dialog--is-closed'); 
}





close() {

let dialog = this;

if   ( this.isDirty ) {






let notice = new Notice();
notice.msg = Workbench.language.REOPEN_CLOSED_DIALOG;
notice.setStatus( 'warning' );
notice.timeout = 120;
notice.onClick( function() {
Workbench.dialog = dialog;
dialog.show();
notice.close();
});
notice.show();
}


$('.or-dialog-content .or-view.or-view--is-dirty').removeClass('view--is-dirty');
this.hide();

}
}