import $ from  '../../../../cms/ui/themes/default/script/jquery-global.min.js';
import Workbench from "../../../../cms/ui/themes/default/script/openrat/workbench.min.js";
export default function(element ) {
$(element).find('textarea').orAutoheight();
$(element).find("textarea.or-editor.or-code-editor").each( async function() {
let $editor = $(this);
await Workbench.addStyle ('codemirror-style' ,'./modules/editor/codemirror/lib/codemirror.css');
await Workbench.addScript('codemirror-script','./modules/editor/codemirror/lib/codemirror.js' );
let mode = $editor.data('mode');
let mimetype = $editor.data('mimetype');
if(mimetype.length>0)
mode = mimetype;
let textareaEl = this;
let editor = CodeMirror.fromTextArea( textareaEl, {
lineNumbers: true,
viewportMargin: Infinity,
mode: mode,
dragDrop: false,
})
editor.on('change',function() {
let newValue = editor.getValue();
$(textareaEl).val( newValue );
} );
Workbench.getInstance().registerAsDroppable(editor.getWrapperElement(),
(e)=> {
e.stopPropagation();
e.preventDefault();
console.debug('dropped',e.dataTransfer);
let pos = editor.getCursor();
editor.setSelection(pos, pos);
let insertText = e.dataTransfer.getData('id')
let toInsert = ''+insertText;
editor.replaceSelection(toInsert);
}
);
} );
$(element).find("textarea.or-editor.or-markdown-editor").each( async function() {
await Workbench.addStyle ('simplemde-style' ,'./modules/editor/simplemde/simplemde.min.css');
await Workbench.addScript('simplemde-script','./modules/editor/simplemde/simplemde.min.js' );
let textarea = this;
let toolbar = [{
name: "bold",
action: SimpleMDE.toggleBold,
className: "or-image-icon or-image-icon--editor-bold",
title: "Bold",
},
{
name: "italic",
action: SimpleMDE.toggleItalic,
className: "or-image-icon or-image-icon--editor-italic",
title: "Italic",
},
{
name: "heading",
action: SimpleMDE.toggleHeadingBigger,
className: "or-image-icon or-image-icon--editor-headline",
title: "Headline",
},
"|", 
{
name: "quote",
action: SimpleMDE.toggleBlockquote,
className: "or-image-icon or-image-icon--editor-quote",
title: "Quote",
},
{
name: "code",
action: SimpleMDE.toggleCodeBlock,
className: "or-image-icon or-image-icon--editor-code",
title: "Code",
},
"|", 
{
name: "generic list",
action: SimpleMDE.toggleUnorderedList,
className: "or-image-icon or-image-icon--editor-unnumberedlist",
title: "Unnumbered list",
},
{
name: "numbered list",
action: SimpleMDE.toggleOrderedList,
className: "or-image-icon or-image-icon--editor-numberedlist",
title: "Numbered list",
},
"|", 
{
name: "table",
action: SimpleMDE.drawTable,
className: "or-image-icon or-image-icon--editor-table",
title: "Table",
},
{
name: "horizontalrule",
action: SimpleMDE.drawHorizontalRule,
className: "or-image-icon or-image-icon--editor-horizontalrule",
title: "Horizontal rule",
},
"|", 
{
name: "undo",
action: SimpleMDE.undo,
className: "or-image-icon or-image-icon--editor-undo",
title: "Undo",
},
{
name: "redo",
action: SimpleMDE.redo,
className: "or-image-icon or-image-icon--editor-redo",
title: "Redo",
},
"|", 
{
name: "link",
action: SimpleMDE.drawLink,
className: "or-image-icon or-image-icon--editor-link",
title: "Link",
},
{
name: "image",
action: SimpleMDE.drawImage,
className: "or-image-icon or-image-icon--editor-image",
title: "Image",
},
"|", 
{
name: "guide",
action: "https:/"+"/simplemde.com/markdown-guide",
className: "or-image-icon or-image-icon--editor-help",
title: "Howto markdown",
},
];
let mde = new SimpleMDE(
{
element: $(this)[0],
toolbar: toolbar,
autoDownloadFontAwesome: false
}
);
let codemirror = mde.codemirror;
codemirror.on('change',function() {
let newValue = codemirror.getValue();
$(textarea).val( newValue );
} );
} );
$(element).find("textarea.or-editor.or-html-editor").each( async function() {
let textarea = this;
await Workbench.addStyle ('trumbowyg-style'   ,'./modules/editor/trumbowyg/ui/trumbowyg.css');
await Workbench.addScript('jquery-slim-script','./modules/editor/trumbowyg/jquery-3.6.0.min.js' ); 
let j = jQuery.noConflict();
await Workbench.addScript('trumbowyg-script'  ,'./modules/editor/trumbowyg/trumbowyg.js' );
j.trumbowyg.svgPath = './modules/editor/trumbowyg/ui/icons.svg';
j(textarea).trumbowyg();
} );
};